name: Build Tauri Frontend

on:
  workflow_dispatch:
    inputs:
      build_windows:
        description: 'Build for Windows'
        required: false
        default: true
        type: boolean
      build_linux:
        description: 'Build for Linux'
        required: false
        default: false
        type: boolean
      build_macos:
        description: 'Build for macOS'
        required: false
        default: false
        type: boolean
  release:
    types: [published]

jobs:
  build_windows:
    if: |
      github.event_name != 'workflow_dispatch' ||
      github.event.inputs.build_windows == 'true'
    runs-on: windows-latest
    name: Build Tauri app (Windows)

    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust build
        uses: actions/cache@v4
        with:
          path: |
            client/src-tauri/target
            ~/.cargo/registry
            ~/.cargo/git
          key: rust-build-windows-${{ hashFiles('client/src-tauri/Cargo.lock') }}

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun
          key: bun-windows-${{ hashFiles('client/bun.lock') }}

      - name: Install frontend dependencies
        working-directory: client
        run: bun install --frozen-lockfile

      - name: Build Tauri app (Windows)
        working-directory: client
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
          VITE_CLIENT_ID: ${{ secrets.VITE_CLIENT_ID }}
          VITE_DESKTOP_CLIENT_ID: ${{ secrets.VITE_DESKTOP_CLIENT_ID }}
        run: bunx --bun tauri build

      - name: Upload bundle artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tauri-bundle-windows
          path: client/src-tauri/target/release/bundle/nsis
          if-no-files-found: error

  build_linux:
    if: |
      github.event_name != 'workflow_dispatch' ||
      github.event.inputs.build_linux == 'true'
    runs-on: ubuntu-latest
    name: Build Tauri app (Linux)

    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust build
        uses: actions/cache@v4
        with:
          path: |
            client/src-tauri/target
            ~/.cargo/registry
            ~/.cargo/git
          key: rust-build-linux-${{ hashFiles('client/src-tauri/Cargo.lock') }}

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun
          key: bun-linux-${{ hashFiles('client/bun.lock') }}

      - name: Install Linux build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            curl \
            wget \
            file \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            libwebkit2gtk-4.1-dev \
            patchelf

      - name: Install frontend dependencies
        working-directory: client
        run: bun install --frozen-lockfile

      - name: Build Tauri app (Linux)
        working-directory: client
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
          VITE_CLIENT_ID: ${{ secrets.VITE_CLIENT_ID }}
          VITE_DESKTOP_CLIENT_ID: ${{ secrets.VITE_DESKTOP_CLIENT_ID }}
        run: bunx --bun tauri build

      - name: Upload bundle artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tauri-bundle-linux
          path: client/src-tauri/target/release/bundle
          if-no-files-found: error

  build_macos:
    if: |
      github.event_name != 'workflow_dispatch' ||
      github.event.inputs.build_macos == 'true'
    runs-on: macos-latest
    name: Build Tauri app (macOS)

    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust build
        uses: actions/cache@v4
        with:
          path: |
            client/src-tauri/target
            ~/.cargo/registry
            ~/.cargo/git
          key: rust-build-macos-${{ hashFiles('client/src-tauri/Cargo.lock') }}

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun
          key: bun-macos-${{ hashFiles('client/bun.lock') }}

      - name: Install frontend dependencies
        working-directory: client
        run: bun install --frozen-lockfile

      - name: Build Tauri app (macOS)
        working-directory: client
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
          VITE_CLIENT_ID: ${{ secrets.VITE_CLIENT_ID }}
          VITE_DESKTOP_CLIENT_ID: ${{ secrets.VITE_DESKTOP_CLIENT_ID }}
        run: bunx --bun tauri build

      - name: Upload bundle artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tauri-bundle-macos
          path: client/src-tauri/target/release/bundle
          if-no-files-found: error
